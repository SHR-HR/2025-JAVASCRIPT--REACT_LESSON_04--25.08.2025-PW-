// Безопасное чтение/запись localStorage

// Функция для безопасного чтения данных из localStorage
// Принимает параметры:
// - k: ключ, по которому происходит чтение
// - def: значение по умолчанию, которое возвращается если чтение не удалось
export const read = (k, def) => {
  try {
    // Пытаемся получить значение из localStorage по ключу
    const v = localStorage.getItem(k);
    
    // Если значение равно null или undefined, возвращаем значение по умолчанию
    if (v == null) return def;
    
    // Если тип значения по умолчанию - number, преобразуем строку в число
    if (typeof def === 'number') return Number(v);
    
    // В остальных случаях возвращаем значение как есть (строку)
    return v;
    
  } catch { 
    // В случае любой ошибки (например, localStorage недоступен) возвращаем значение по умолчанию
    return def; 
  }
};

// Функция для безопасной записи данных в localStorage
// Принимает параметры:
// - k: ключ, по которому происходит запись
// - v: значение, которое нужно записать (будет преобразовано в строку)
export const write = (k, v) => {
  try { 
    // Пытаемся записать значение в localStorage, преобразовав его в строку
    localStorage.setItem(k, String(v)); 
  } catch {} // В случае ошибки просто игнорируем её (ничего не делаем)
};



